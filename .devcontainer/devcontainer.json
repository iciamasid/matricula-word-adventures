
{
    "name": "Capacitor Android Build Environment",
    "image": "mcr.microsoft.com/devcontainers/universal:latest",
    
    "features": {
        "ghcr.io/devcontainers/features/node:1": {
            "version": "20"
        },
        "ghcr.io/devcontainers/features/java:1": {
            "version": "17",
            "jdkDistro": "ms"
        }
    },
    
    "postCreateCommand": "bash -c 'set -e && echo \"🚀 Starting comprehensive setup...\" && echo \"📋 Environment Check:\" && echo \"User: $(whoami)\" && echo \"Working Directory: $(pwd)\" && echo \"Available Memory: $(free -h | grep Mem | awk \"{print \\$2}\")\" && echo \"Disk Space: $(df -h . | tail -1 | awk \"{print \\$4}\")\" && echo \"📋 Setting up Java environment...\" && export JAVA_HOME=/usr/lib/jvm/msopenjdk-17 && export ANDROID_SDK_ROOT=/usr/local/lib/android/sdk && export ANDROID_HOME=/usr/local/lib/android/sdk && export PATH=$PATH:$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$ANDROID_SDK_ROOT/platform-tools:$JAVA_HOME/bin && echo \"☕ Java Configuration:\" && echo \"JAVA_HOME: $JAVA_HOME\" && if [ -d \"$JAVA_HOME\" ]; then echo \"✅ Java directory exists\"; else echo \"❌ Java directory not found\"; fi && if [ -f \"$JAVA_HOME/bin/java\" ]; then echo \"✅ Java executable found\"; $JAVA_HOME/bin/java -version; else echo \"❌ Java executable not found\"; fi && echo \"📦 Installing npm dependencies...\" && if npm install --legacy-peer-deps; then echo \"✅ npm dependencies installed\"; else echo \"❌ npm install failed\" && exit 1; fi && echo \"🔨 Building the project...\" && if npm run build; then echo \"✅ Project built successfully\"; else echo \"❌ Build failed\" && exit 1; fi && echo \"📱 Setting up Android SDK...\" && echo \"Android SDK Root: $ANDROID_SDK_ROOT\" && if [ ! -d \"$ANDROID_SDK_ROOT\" ]; then echo \"📁 Creating Android SDK directory...\"; sudo mkdir -p $ANDROID_SDK_ROOT; sudo chown -R codespace:codespace $ANDROID_SDK_ROOT; fi && echo \"⬇️ Downloading Android command line tools...\" && if wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip; then echo \"✅ Command line tools downloaded\"; else echo \"❌ Failed to download command line tools\" && exit 1; fi && if unzip -q commandlinetools-linux-9477386_latest.zip; then echo \"✅ Command line tools extracted\"; else echo \"❌ Failed to extract command line tools\" && exit 1; fi && sudo mkdir -p $ANDROID_SDK_ROOT/cmdline-tools && sudo mv cmdline-tools $ANDROID_SDK_ROOT/cmdline-tools/latest && sudo chown -R codespace:codespace $ANDROID_SDK_ROOT && rm commandlinetools-linux-9477386_latest.zip && echo \"📋 Verifying SDK manager...\" && if [ -f \"$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager\" ]; then echo \"✅ SDK manager found\"; else echo \"❌ SDK manager not found\" && exit 1; fi && echo \"📋 Accepting Android licenses (this may take a while)...\" && echo \"📋 Note: Automatically accepting all licenses...\" && (yes | timeout 300 $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --licenses || echo \"License acceptance completed (may have timed out safely)\") && echo \"⬇️ Installing Android SDK components...\" && if $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --install \"platforms;android-34\" \"build-tools;34.0.0\" \"platform-tools\"; then echo \"✅ SDK components installed\"; else echo \"❌ Failed to install SDK components\" && exit 1; fi && echo \"📱 Setting up Capacitor Android platform...\" && (npx cap remove android || echo \"No existing android platform to remove\") && rm -rf android && if npx cap add android; then echo \"✅ Android platform added\"; else echo \"❌ Failed to add Android platform\" && exit 1; fi && echo \"🔄 Syncing Capacitor...\" && if npx cap sync android; then echo \"✅ Capacitor synced\"; else echo \"❌ Capacitor sync failed\" && exit 1; fi && echo \"⚙️ Configuring Android project...\" && cd android && chmod +x gradlew && echo \"sdk.dir=$ANDROID_SDK_ROOT\" > local.properties && echo \"📝 Setting up gradle.properties with Java 17...\" && echo \"org.gradle.java.home=$JAVA_HOME\" > gradle.properties && echo \"android.useAndroidX=true\" >> gradle.properties && echo \"android.enableJetifier=true\" >> gradle.properties && echo \"org.gradle.daemon=true\" >> gradle.properties && echo \"org.gradle.parallel=true\" >> gradle.properties && echo \"org.gradle.configureondemand=true\" >> gradle.properties && echo \"org.gradle.jvmargs=-Xmx2048m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8\" >> gradle.properties && echo \"📋 Verifying gradle configuration:\" && cat gradle.properties && cd .. && echo \"🌍 Setting up persistent environment variables...\" && cat >> ~/.bashrc << EOF && \n# Android Development Environment\nexport ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT\nexport ANDROID_HOME=$ANDROID_SDK_ROOT\nexport JAVA_HOME=$JAVA_HOME\nexport PATH=\\$PATH:$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$ANDROID_SDK_ROOT/platform-tools:\\$JAVA_HOME/bin\nEOF\necho \"📋 Final verification:\" && echo \"Java version: $($JAVA_HOME/bin/java -version 2>&1 | head -n1)\" && echo \"Android SDK: $(ls -la $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager 2>/dev/null && echo \"Found\" || echo \"Not found\")\" && echo \"Gradle wrapper: $(ls -la android/gradlew 2>/dev/null && echo \"Found\" || echo \"Not found\")\" && echo \"✅ Android build environment setup completed successfully!\" && echo \"📋 Ready to build APK with: chmod +x build-apk.sh && ./build-apk.sh\"'",
    
    "customizations": {
        "vscode": {
            "extensions": [
                "esbenp.prettier-vscode",
                "dbaeumer.vscode-eslint",
                "ms-vscode.vscode-typescript-next",
                "formulahendry.auto-rename-tag"
            ]
        }
    }
}
